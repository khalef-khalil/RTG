// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Challenge {
  id              String   @id @default(cuid())
  
  title           String   // "Complete 5 meaningful conversations"
  description     String   // Detailed explanation
  type            String   // "count", "time", "binary", "checklist"
  targetValue     Int?     // For count/time challenges
  
  // Deadline management
  deadline        DateTime? // When the challenge should be completed
  timeLimit       Int?     // Hours to complete (optional, for time-based challenges)
  
  // Completion tracking
  completed       Boolean  @default(false)
  completedAt     DateTime?
  progress        Int      @default(0) // Current progress
  
  // Completion reflection
  biggestObstacle String?  // What was the biggest obstacle (tags)
  improvement     String?  // What would you do differently
  pushRating      Int?     // How much did this push you (1-5 scale)
  
  // Checklist items (JSON array for checklist type)
  checklistItems  String?  // JSON string of checklist items
  
  // Priority and category
  priority        String   @default("medium") // "low", "medium", "high"
  category        String   // "personal", "work", "health", "learning", etc.
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  @@map("challenges")
}

model Principle {
  id          String   @id @default(cuid())
  text        String
  type        String   // "do" or "dont"
  category    String
  source      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("principles")
}

model Focus {
  id          String   @id @default(cuid())
  text        String
  type        String   // "matters" or "doesnt_matter"
  category    String
  source      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("focus")
}
